{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","container/App.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","cardComponent","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAXF,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC3B,OACC,sBAAKC,UAAW,sDAAhB,UACC,qBAAKC,IAAI,SAASC,IAAK,wBAAyBH,EAAI,aACpD,gCACC,6BAAKF,IACL,4BAAIC,WCaOK,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACbC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACvC,OACC,cAAC,EAAD,CAECT,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHZM,EAAOI,GAAGT,OAQlB,OACC,8BACKM,KCJQI,EAXG,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,aACpB,OACC,qBAAKV,UAAU,MAAf,SACC,uBACCA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAWH,OCCAI,EAPA,SAACC,GACd,OACC,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,SAA1C,SACEH,EAAMI,YCiBIC,G,wDApBd,WAAYL,GAAQ,IAAD,8BACjB,cAAMA,IACDM,MAAQ,CACXC,UAAU,GAHK,E,qDAOjB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG1B,WACC,OAAGG,KAAKJ,MAAMC,SACN,2DAEDG,KAAKV,MAAMI,a,GAhBMQ,cC6CbC,E,kDAvCd,aAAc,IAAD,8BACZ,gBAaDC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAbzC,EAAKZ,MAAQ,CACZjB,OAAQ,GACR2B,YAAa,IAJF,E,qDAQb,WAAqB,IAAD,OACnBG,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAAEtB,OAAQkC,S,oBAOzC,WAAS,IAAD,OACDC,EAAiBd,KAAKJ,MAAMjB,OAAOoC,QAAO,SAAAC,GAC/C,OAAOA,EAAM5C,KAAK6C,cAAcC,SAAS,EAAKtB,MAAMU,YAAYW,kBAEjE,OAAiC,IAA7BjB,KAAKJ,MAAMjB,OAAOwC,OACd,0CAGN,sBAAK5C,UAAY,KAAjB,UACC,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWU,aAAce,KAAKI,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAUzB,OAAQmC,e,GAhCPZ,a,MCElBkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.4adaa4d1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// directly destructuring props inside the brackets\r\nconst Card = ({name, email, id }) => {\r\n\treturn (\r\n\t\t<div className= 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img alt='robots' src={'https://robohash.org/'+ id +'?200x200'} />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t)\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n\tconst cardComponent = robots.map((user, i) => {\r\n\t\treturn (\r\n\t\t\t<Card \r\n\t\t\t\tkey={robots[i].id} \r\n\t\t\t\tid={robots[i].id} \r\n\t\t\t\tname={robots[i].name} \r\n\t\t\t\temail={robots[i].email}\r\n\t\t\t/>\r\n\t\t);\r\n\t})\r\n\r\n\treturn(\r\n\t\t<div>\r\n    \t\t{cardComponent}\r\n    \t</div>\r\n\t\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) =>{\r\n\treturn(\r\n\t\t<div className='pa2'>\r\n\t\t\t<input \r\n\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\r\n\t\t\t\ttype='search' \r\n\t\t\t\tplaceholder='search robots'\r\n\t\t\t\tonChange={ searchChange} />\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n\r\n\r\nconst Scroll = (props) => {\r\n\t\treturn (\r\n\t\t\t<div style={{overflowY: 'scroll', height: '800px'}}>\r\n\t\t\t\t{props.children}\r\n\t\t\t</div>\r\n\t\t\t);\r\n};\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n\tconstructor(props) {\r\n\t\t\tsuper(props);\r\n\t\t\tthis.state = {\r\n\t\t\t\t\thasError: false\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcomponentDidCatch(error, info) {\r\n\t\t\t\tthis.setState({hasError: true})\r\n\t\t\t}\r\n\r\n\t\t\trender() {\r\n\t\t\t\tif(this.state.hasError){\r\n\t\t\t\t\treturn <h1> Oooops. That is not good</h1>\r\n\t\t\t\t}\r\n\t\t\t\treturn this.props.children;\r\n\r\n\t\t\t}\r\n\t}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\nimport ErrorBoundary from '../components/ErrorBoundary.js';\r\n\r\nclass App extends Component {\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(users => this.setState({ robots: users}));\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({searchfield: event.target.value})\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst filteredRobots = this.state.robots.filter(robot =>{\r\n\t\t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n\t\t})\r\n\t\tif (this.state.robots.length === 0) {\r\n\t\t\treturn <h1> Loading</h1>\r\n\t\t} else {\r\n\t\t\treturn(\r\n\t\t\t\t<div className = 'tc'>\r\n\t\t\t\t\t<h1 className='f1'> RoboFriends</h1>\r\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t\t<CardList robots={filteredRobots}/>\r\n\t\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t\t</Scroll>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\nexport default App;","import React from 'react'; // view library, core of the package that does DOM manipulation for us\nimport ReactDOM from 'react-dom'; // used for website, native will be for mobile phones\nimport './index.css'; \nimport App from './container/App'\nimport 'tachyons';\n\n\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n  \t<App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your Hello, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}